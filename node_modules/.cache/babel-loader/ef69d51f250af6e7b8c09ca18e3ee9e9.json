{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/EUGENE/ChoiceDev/Choice-Coin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/EUGENE/ChoiceDev/Choice-Coin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/EUGENE/ChoiceDev/Choice-Coin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import algosdk from\"algosdk\";import{ASSET_ID}from\"../constants\";import{useDispatch,useSelector}from\"react-redux\";import{useEffect,useState}from\"react\";import MyAlgoConnect from\"@randlabs/myalgo-connect\";import{useWindowSize}from\"@react-hook/window-size\";import{CopyToClipboard}from\"react-copy-to-clipboard\";import GetCommittedAmount from\"../GetCommittedAmount\";import WalletConnect from\"@walletconnect/client\";import QRCodeModal from\"algorand-walletconnect-qrcode-modal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TopNavigationBar=function TopNavigationBar(_ref){var _localStorage$getItem,_balance$addressNum,_balance$addressNum2,_balance$addressNum3;var darkTheme=_ref.darkTheme;var dispatch=useDispatch();var addressNum=useSelector(function(state){return state.status.addressNum;});var isWalletConnected=localStorage.getItem(\"wallet-type\")===null?false:true;var LogOut=function LogOut(){localStorage.removeItem(\"address\");localStorage.removeItem(\"addresses\");localStorage.removeItem(\"wallet-type\");localStorage.removeItem(\"walletconnect\");window.location.reload();console.log(\"data\");};var setMode=function setMode(){if(!darkTheme){localStorage.setItem(\"mode\",\"dark\");dispatch({type:\"dark_mode\"});}else{localStorage.setItem(\"mode\",\"light\");dispatch({type:\"light_mode\"});}};var _useWindowSize=useWindowSize(),_useWindowSize2=_slicedToArray(_useWindowSize,1),width=_useWindowSize2[0];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),balance=_useState2[0],setBalance=_useState2[1];var algodClient=new algosdk.Algodv2({\"X-API-Key\":\"Xy8NsXxfJg2cQ2YQ4pax6aLrTcj55jZ9mbsNCM30 \"},\"https://testnet-algorand.api.purestake.io/ps2\",\"\");var walletAddress=localStorage.getItem(\"address\");var addresses=(_localStorage$getItem=localStorage.getItem(\"addresses\"))===null||_localStorage$getItem===void 0?void 0:_localStorage$getItem.split(\",\");var addrArr=[];useEffect(function(){addresses===null||addresses===void 0?void 0:addresses.forEach(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(item){var _myAccountInfo$assets;var myAccountInfo,bal,_addrArr$;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return algodClient.accountInformation(item).do();case 2:myAccountInfo=_context.sent;bal=((_myAccountInfo$assets=myAccountInfo.assets.find(function(element){return element[\"asset-id\"]===ASSET_ID;}))===null||_myAccountInfo$assets===void 0?void 0:_myAccountInfo$assets.amount)/100;addrArr.push({balance:!!bal?bal:0,address:item});if((addrArr===null||addrArr===void 0?void 0:addrArr.length)===(addresses===null||addresses===void 0?void 0:addresses.length)){console.log(addrArr);dispatch({type:\"setAlgoAddress\",addressIndex:0,addr:(_addrArr$=addrArr[0])===null||_addrArr$===void 0?void 0:_addrArr$.address});setBalance(addrArr);}case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());},[]);var myAlgoConnect=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var myAlgoWallet,accounts,_addresses,address;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:myAlgoWallet=new MyAlgoConnect();_context2.prev=1;_context2.next=4;return myAlgoWallet.connect({shouldSelectOneAccount:true});case 4:accounts=_context2.sent;_addresses=accounts.map(function(item){return item===null||item===void 0?void 0:item.address;});address=accounts[0].address;// close modal.\nlocalStorage.setItem(\"wallet-type\",\"my-algo\");localStorage.setItem(\"address\",address);localStorage.setItem(\"addresses\",_addresses);window.location.reload();_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[1,13]]);}));return function myAlgoConnect(){return _ref3.apply(this,arguments);};}();var connectWallet=function connectWallet(){var connector=new WalletConnect({bridge:\"https://bridge.walletconnect.org\",qrcodeModal:QRCodeModal});if(!connector.connected){connector.createSession();}connector.on(\"connect\",function(error,payload){if(error){throw error;}var accounts=payload.params[0].accounts;var addresses=accounts.map(function(item){return item;});var address=accounts[0];localStorage.setItem(\"wallet-type\",\"walletconnect\");localStorage.setItem(\"address\",address);localStorage.setItem(\"addresses\",addresses);window.location.reload();});connector.on(\"session_update\",function(error,payload){if(error){throw error;}var accounts=payload.params[0].accounts;var addresses=accounts.map(function(item){return item;});var address=accounts[0];localStorage.setItem(\"wallet-type\",\"walletconnect\");localStorage.setItem(\"address\",address);localStorage.setItem(\"addresses\",addresses);window.location.reload();});connector.on(\"disconnect\",function(error,payload){if(error){console.log(error);}});};var algoSignerConnect=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var accounts,_addresses2,address;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;if(!(typeof window.AlgoSigner===\"undefined\")){_context3.next=5;break;}window.open(\"https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm\",\"_blank\");_context3.next=16;break;case 5:_context3.next=7;return window.AlgoSigner.connect({ledger:\"TestNet\"});case 7:_context3.next=9;return window.AlgoSigner.accounts({ledger:\"TestNet\"});case 9:accounts=_context3.sent;_addresses2=accounts.map(function(item){return item===null||item===void 0?void 0:item.address;});address=accounts[0].address;// close modal.\nlocalStorage.setItem(\"wallet-type\",\"algosigner\");localStorage.setItem(\"address\",address);localStorage.setItem(\"addresses\",_addresses2);window.location.reload();case 16:_context3.next=21;break;case 18:_context3.prev=18;_context3.t0=_context3[\"catch\"](0);alert(\"AlgoSigner not set up yet!\");case 21:case\"end\":return _context3.stop();}}},_callee3,null,[[0,18]]);}));return function algoSignerConnect(){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"header\",{className:\"small_header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"small_header_inn\",children:[/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",textTransform:\"uppercase\"},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Choice Coin\"})}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},children:!!isWalletConnected?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"addrDisplay\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"addrDispMain\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"addrDisplayInn\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"addrBalance\",children:[(_balance$addressNum=balance[addressNum])===null||_balance$addressNum===void 0?void 0:_balance$addressNum.balance,\" Choice\"]}),/*#__PURE__*/_jsx(CopyToClipboard,{text:(_balance$addressNum2=balance[addressNum])===null||_balance$addressNum2===void 0?void 0:_balance$addressNum2.address,children:/*#__PURE__*/_jsxs(\"div\",{className:\"addressTxt\",children:[/*#__PURE__*/_jsx(\"p\",{children:(_balance$addressNum3=balance[addressNum])===null||_balance$addressNum3===void 0?void 0:_balance$addressNum3.address}),/*#__PURE__*/_jsx(\"i\",{className:\"uil uil-copy\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"dropDownConnect_items\",children:balance===null||balance===void 0?void 0:balance.map(function(item,index){return/*#__PURE__*/_jsx(\"div\",{className:\"dropDownConnect_item\",onClick:function onClick(){dispatch({type:\"setAlgoAddress\",addressIndex:index,addr:item.address});},children:/*#__PURE__*/_jsx(\"p\",{className:\"dropDownConnect_item_txt\",children:item.address})},index);})})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"dropDownConnect\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dropDownConnect_button\",children:/*#__PURE__*/_jsx(\"button\",{className:\"connect_wallet_button\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Connect Wallet\",/*#__PURE__*/_jsx(\"i\",{className:\"uil uil-angle-down\",style:{fontSize:\"18px\"}})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropDownConnect_items\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dropDownConnect_item\",onClick:myAlgoConnect,children:[/*#__PURE__*/_jsx(\"div\",{className:\"dropDownConnect_img\",children:/*#__PURE__*/_jsx(\"img\",{src:\"https://i.postimg.cc/76r9kXSr/My-Algo-Logo-4c21daa4.png\",alt:\"\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"dropDownConnect_item_txt\",children:\"Algo-Wallet\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropDownConnect_item\",onClick:algoSignerConnect,children:[/*#__PURE__*/_jsx(\"div\",{className:\"dropDownConnect_img\",children:/*#__PURE__*/_jsx(\"img\",{src:\"https://i.postimg.cc/L4JB4JwT/Algo-Signer-2ec35000.png\",alt:\"\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"dropDownConnect_item_txt\",children:typeof window.AlgoSigner===undefined?\"Install AlgoSigner\":\"AlgoSigner\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropDownConnect_item\",onClick:connectWallet,children:[/*#__PURE__*/_jsx(\"div\",{className:\"dropDownConnect_img\",children:/*#__PURE__*/_jsx(\"img\",{src:\"https://i.postimg.cc/J7JZ4cFb/icon-37675b59-1.png\",alt:\"\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"dropDownConnect_item_txt\",children:\"Algorand Wallet(MOBILE)\"})]})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\",display:\"flex\",fontSize:\"13px\",fontWeight:\"500\",wordSpacing:\"1px\",alignItems:\"center\",color:walletAddress?\"#fff\":\"var(--wht)\",padding:\"0px 5vw\",letterSpacing:\"0.5px\",textTransform:\"uppercase\",background:walletAddress?\"var(--main-col)\":\"var(--background)\",height:\"var(--sm-hd-height-half)\",justifyContent:\"space-between\",borderTop:\"1px solid var(--border-default)\"},children:[/*#__PURE__*/_jsxs(\"p\",{style:{opacity:\"0.9\"},children:[\"Amount of Choice Coin used for voting:\\xA0\",!!walletAddress&&/*#__PURE__*/_jsx(GetCommittedAmount,{}),\" $Choice\"]}),width>850&&/*#__PURE__*/_jsxs(\"ul\",{className:\"listNavBig\",children:[/*#__PURE__*/_jsxs(\"li\",{onClick:setMode,children:[\"LIGHT/DARK\",darkTheme?/*#__PURE__*/_jsx(\"i\",{className:\"uil uil-brightness-low\"}):/*#__PURE__*/_jsx(\"i\",{className:\"uil uil-moon\"})]}),/*#__PURE__*/_jsx(\"li\",{onClick:LogOut,children:\"Sign Out\"})]})]})]});};export default TopNavigationBar;","map":{"version":3,"sources":["C:/Users/EUGENE/ChoiceDev/Choice-Coin/src/statics/TopNavigationBar.js"],"names":["algosdk","ASSET_ID","useDispatch","useSelector","useEffect","useState","MyAlgoConnect","useWindowSize","CopyToClipboard","GetCommittedAmount","WalletConnect","QRCodeModal","TopNavigationBar","darkTheme","dispatch","addressNum","state","status","isWalletConnected","localStorage","getItem","LogOut","removeItem","window","location","reload","console","log","setMode","setItem","type","width","balance","setBalance","algodClient","Algodv2","walletAddress","addresses","split","addrArr","forEach","item","accountInformation","do","myAccountInfo","bal","assets","find","element","amount","push","address","length","addressIndex","addr","myAlgoConnect","myAlgoWallet","connect","shouldSelectOneAccount","accounts","map","connectWallet","connector","bridge","qrcodeModal","connected","createSession","on","error","payload","params","algoSignerConnect","AlgoSigner","open","ledger","alert","display","alignItems","justifyContent","textTransform","index","fontSize","undefined","fontWeight","wordSpacing","color","padding","letterSpacing","background","height","borderTop","opacity"],"mappings":"idAAA,MAAOA,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,aAAP,KAA0B,0BAA1B,CACA,OAASC,aAAT,KAA8B,yBAA9B,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,uBAA/B,CAEA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,qCAAxB,C,6IAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAmB,4FAAhBC,CAAAA,SAAgB,MAAhBA,SAAgB,CAC1C,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA,GAAMa,CAAAA,UAAU,CAAGZ,WAAW,CAAC,SAACa,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAN,CAAaF,UAAxB,EAAD,CAA9B,CACA,GAAMG,CAAAA,iBAAiB,CACrBC,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAwC,IAAxC,CAA+C,KAA/C,CAAuD,IADzD,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBF,YAAY,CAACG,UAAb,CAAwB,SAAxB,EACAH,YAAY,CAACG,UAAb,CAAwB,WAAxB,EACAH,YAAY,CAACG,UAAb,CAAwB,aAAxB,EACAH,YAAY,CAACG,UAAb,CAAwB,eAAxB,EACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EACD,CAPD,CASA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAI,CAACf,SAAL,CAAgB,CACdM,YAAY,CAACU,OAAb,CAAqB,MAArB,CAA6B,MAA7B,EACAf,QAAQ,CAAC,CAAEgB,IAAI,CAAE,WAAR,CAAD,CAAR,CACD,CAHD,IAGO,CACLX,YAAY,CAACU,OAAb,CAAqB,MAArB,CAA6B,OAA7B,EACAf,QAAQ,CAAC,CAAEgB,IAAI,CAAE,YAAR,CAAD,CAAR,CACD,CACF,CARD,CAhB0C,mBA0B1BvB,aAAa,EA1Ba,kDA0BnCwB,KA1BmC,kCA2BZ1B,QAAQ,CAAC,EAAD,CA3BI,wCA2BnC2B,OA3BmC,eA2B1BC,UA3B0B,eA6B1C,GAAMC,CAAAA,WAAW,CAAG,GAAIlC,CAAAA,OAAO,CAACmC,OAAZ,CAClB,CACE,YAAa,2CADf,CADkB,CAIlB,+CAJkB,CAKlB,EALkB,CAApB,CAQA,GAAMC,CAAAA,aAAa,CAAGjB,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAtB,CACA,GAAMiB,CAAAA,SAAS,wBAAGlB,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAH,gDAAG,sBAAmCkB,KAAnC,CAAyC,GAAzC,CAAlB,CAEA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CAEAnC,SAAS,CAAC,UAAM,CACdiC,SAAS,OAAT,EAAAA,SAAS,SAAT,QAAAA,SAAS,CAAEG,OAAX,2FAAmB,iBAAOC,IAAP,kMACWP,CAAAA,WAAW,CAACQ,kBAAZ,CAA+BD,IAA/B,EAAqCE,EAArC,EADX,QACXC,aADW,eAEXC,GAFW,CAGf,wBAAAD,aAAa,CAACE,MAAd,CAAqBC,IAArB,CAA0B,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAAC,UAAD,CAAP,GAAwB/C,QAArC,EAA1B,uEACIgD,MADJ,EACa,GAJE,CAMjBV,OAAO,CAACW,IAAR,CAAa,CAAElB,OAAO,CAAE,CAAC,CAACa,GAAF,CAAQA,GAAR,CAAc,CAAzB,CAA4BM,OAAO,CAAEV,IAArC,CAAb,EAEA,GAAI,CAAAF,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEa,MAAT,KAAoBf,SAApB,SAAoBA,SAApB,iBAAoBA,SAAS,CAAEe,MAA/B,CAAJ,CAA2C,CACzC1B,OAAO,CAACC,GAAR,CAAYY,OAAZ,EACAzB,QAAQ,CAAC,CACPgB,IAAI,CAAE,gBADC,CAEPuB,YAAY,CAAE,CAFP,CAGPC,IAAI,YAAEf,OAAO,CAAC,CAAD,CAAT,oCAAE,UAAYY,OAHX,CAAD,CAAR,CAKAlB,UAAU,CAACM,OAAD,CAAV,CACD,CAhBgB,sDAAnB,iEAkBD,CAnBQ,CAmBN,EAnBM,CAAT,CAqBA,GAAMgB,CAAAA,aAAa,2FAAG,qLACdC,YADc,CACC,GAAIlD,CAAAA,aAAJ,EADD,yCAIKkD,CAAAA,YAAY,CAACC,OAAb,CAAqB,CAC1CC,sBAAsB,CAAE,IADkB,CAArB,CAJL,QAIZC,QAJY,gBAQZtB,UARY,CAQAsB,QAAQ,CAACC,GAAT,CAAa,SAACnB,IAAD,QAAUA,CAAAA,IAAV,SAAUA,IAAV,iBAAUA,IAAI,CAAEU,OAAhB,EAAb,CARA,CASZA,OATY,CASFQ,QAAQ,CAAC,CAAD,CAAR,CAAYR,OATV,CAWlB;AACAhC,YAAY,CAACU,OAAb,CAAqB,aAArB,CAAoC,SAApC,EACAV,YAAY,CAACU,OAAb,CAAqB,SAArB,CAAgCsB,OAAhC,EACAhC,YAAY,CAACU,OAAb,CAAqB,WAArB,CAAkCQ,UAAlC,EAEAd,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAhBkB,qFAkBlBC,OAAO,CAACC,GAAR,eAlBkB,uEAAH,kBAAb4B,CAAAA,aAAa,2CAAnB,CAsBA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,SAAS,CAAG,GAAIpD,CAAAA,aAAJ,CAAkB,CAClCqD,MAAM,CAAE,kCAD0B,CAElCC,WAAW,CAAErD,WAFqB,CAAlB,CAAlB,CAKA,GAAI,CAACmD,SAAS,CAACG,SAAf,CAA0B,CACxBH,SAAS,CAACI,aAAV,GACD,CAEDJ,SAAS,CAACK,EAAV,CAAa,SAAb,CAAwB,SAACC,KAAD,CAAQC,OAAR,CAAoB,CAC1C,GAAID,KAAJ,CAAW,CACT,KAAMA,CAAAA,KAAN,CACD,CAHyC,GAKlCT,CAAAA,QALkC,CAKrBU,OAAO,CAACC,MAAR,CAAe,CAAf,CALqB,CAKlCX,QALkC,CAO1C,GAAMtB,CAAAA,SAAS,CAAGsB,QAAQ,CAACC,GAAT,CAAa,SAACnB,IAAD,QAAUA,CAAAA,IAAV,EAAb,CAAlB,CACA,GAAMU,CAAAA,OAAO,CAAGQ,QAAQ,CAAC,CAAD,CAAxB,CAEAxC,YAAY,CAACU,OAAb,CAAqB,aAArB,CAAoC,eAApC,EACAV,YAAY,CAACU,OAAb,CAAqB,SAArB,CAAgCsB,OAAhC,EACAhC,YAAY,CAACU,OAAb,CAAqB,WAArB,CAAkCQ,SAAlC,EAEAd,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACD,CAfD,EAiBAqC,SAAS,CAACK,EAAV,CAAa,gBAAb,CAA+B,SAACC,KAAD,CAAQC,OAAR,CAAoB,CACjD,GAAID,KAAJ,CAAW,CACT,KAAMA,CAAAA,KAAN,CACD,CAHgD,GAKzCT,CAAAA,QALyC,CAK5BU,OAAO,CAACC,MAAR,CAAe,CAAf,CAL4B,CAKzCX,QALyC,CAOjD,GAAMtB,CAAAA,SAAS,CAAGsB,QAAQ,CAACC,GAAT,CAAa,SAACnB,IAAD,QAAUA,CAAAA,IAAV,EAAb,CAAlB,CACA,GAAMU,CAAAA,OAAO,CAAGQ,QAAQ,CAAC,CAAD,CAAxB,CAEAxC,YAAY,CAACU,OAAb,CAAqB,aAArB,CAAoC,eAApC,EACAV,YAAY,CAACU,OAAb,CAAqB,SAArB,CAAgCsB,OAAhC,EACAhC,YAAY,CAACU,OAAb,CAAqB,WAArB,CAAkCQ,SAAlC,EAEAd,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACD,CAfD,EAiBAqC,SAAS,CAACK,EAAV,CAAa,YAAb,CAA2B,SAACC,KAAD,CAAQC,OAAR,CAAoB,CAC7C,GAAID,KAAJ,CAAW,CACT1C,OAAO,CAACC,GAAR,CAAYyC,KAAZ,EACD,CACF,CAJD,EAKD,CAjDD,CAmDA,GAAMG,CAAAA,iBAAiB,2FAAG,+LAElB,MAAOhD,CAAAA,MAAM,CAACiD,UAAd,GAA6B,WAFX,2BAGpBjD,MAAM,CAACkD,IAAP,CACE,uFADF,CAEE,QAFF,EAHoB,sDAQdlD,CAAAA,MAAM,CAACiD,UAAP,CAAkBf,OAAlB,CAA0B,CAC9BiB,MAAM,CAAE,SADsB,CAA1B,CARc,+BAWGnD,CAAAA,MAAM,CAACiD,UAAP,CAAkBb,QAAlB,CAA2B,CAChDe,MAAM,CAAE,SADwC,CAA3B,CAXH,QAWdf,QAXc,gBAedtB,WAfc,CAeFsB,QAAQ,CAACC,GAAT,CAAa,SAACnB,IAAD,QAAUA,CAAAA,IAAV,SAAUA,IAAV,iBAAUA,IAAI,CAAEU,OAAhB,EAAb,CAfE,CAgBdA,OAhBc,CAgBJQ,QAAQ,CAAC,CAAD,CAAR,CAAYR,OAhBR,CAkBpB;AACAhC,YAAY,CAACU,OAAb,CAAqB,aAArB,CAAoC,YAApC,EACAV,YAAY,CAACU,OAAb,CAAqB,SAArB,CAAgCsB,OAAhC,EACAhC,YAAY,CAACU,OAAb,CAAqB,WAArB,CAAkCQ,WAAlC,EAEAd,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAvBoB,6FA0BtBkD,KAAK,CAAC,4BAAD,CAAL,CA1BsB,uEAAH,kBAAjBJ,CAAAA,iBAAiB,2CAAvB,CA8BA,mBACE,gBAAQ,SAAS,CAAC,cAAlB,wBACE,aAAK,SAAS,CAAC,kBAAf,wBACE,YACE,KAAK,CAAE,CACLK,OAAO,CAAE,MADJ,CAELC,UAAU,CAAE,QAFP,CAGLC,cAAc,CAAE,QAHX,CAILC,aAAa,CAAE,WAJV,CADT,uBAQE,uCARF,EADF,cAYE,YACE,KAAK,CAAE,CACLH,OAAO,CAAE,MADJ,CAELC,UAAU,CAAE,QAFP,CAGLC,cAAc,CAAE,QAHX,CADT,UAOG,CAAC,CAAC5D,iBAAF,cACC,sCACE,aAAK,SAAS,CAAC,aAAf,wBACE,YAAK,SAAS,CAAC,cAAf,uBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,aAAK,SAAS,CAAC,aAAf,gCACGc,OAAO,CAACjB,UAAD,CADV,8CACG,oBAAqBiB,OADxB,aADF,cAKE,KAAC,eAAD,EAAiB,IAAI,uBAAEA,OAAO,CAACjB,UAAD,CAAT,+CAAE,qBAAqBoC,OAA5C,uBACE,aAAK,SAAS,CAAC,YAAf,wBACE,yCAAInB,OAAO,CAACjB,UAAD,CAAX,+CAAI,qBAAqBoC,OAAzB,EADF,cAEE,UAAG,SAAS,CAAC,cAAb,EAFF,GADF,EALF,GADF,EADF,cAgBE,YAAK,SAAS,CAAC,uBAAf,UACGnB,OADH,SACGA,OADH,iBACGA,OAAO,CAAE4B,GAAT,CAAa,SAACnB,IAAD,CAAOuC,KAAP,CAAiB,CAC7B,mBACE,YAEE,SAAS,CAAC,sBAFZ,CAGE,OAAO,CAAE,kBAAM,CACblE,QAAQ,CAAC,CACPgB,IAAI,CAAE,gBADC,CAEPuB,YAAY,CAAE2B,KAFP,CAGP1B,IAAI,CAAEb,IAAI,CAACU,OAHJ,CAAD,CAAR,CAKD,CATH,uBAWE,UAAG,SAAS,CAAC,0BAAb,UACGV,IAAI,CAACU,OADR,EAXF,EACO6B,KADP,CADF,CAiBD,CAlBA,CADH,EAhBF,GADF,EADD,cA0CC,aAAK,SAAS,CAAC,iBAAf,wBACE,YAAK,SAAS,CAAC,wBAAf,uBACE,eAAQ,SAAS,CAAC,uBAAlB,uBACE,mDAEE,UACE,SAAS,CAAC,oBADZ,CAEE,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAFT,EAFF,GADF,EADF,EADF,cAaE,aAAK,SAAS,CAAC,uBAAf,wBACE,aAAK,SAAS,CAAC,sBAAf,CAAsC,OAAO,CAAE1B,aAA/C,wBACE,YAAK,SAAS,CAAC,qBAAf,uBACE,YACE,GAAG,CAAC,yDADN,CAEE,GAAG,CAAC,EAFN,EADF,EADF,cAOE,UAAG,SAAS,CAAC,0BAAb,yBAPF,GADF,cAWE,aACE,SAAS,CAAC,sBADZ,CAEE,OAAO,CAAEgB,iBAFX,wBAIE,YAAK,SAAS,CAAC,qBAAf,uBACE,YACE,GAAG,CAAC,wDADN,CAEE,GAAG,CAAC,EAFN,EADF,EAJF,cAUE,UAAG,SAAS,CAAC,0BAAb,UACG,MAAOhD,CAAAA,MAAM,CAACiD,UAAd,GAA6BU,SAA7B,CACG,oBADH,CAEG,YAHN,EAVF,GAXF,cA4BE,aAAK,SAAS,CAAC,sBAAf,CAAsC,OAAO,CAAErB,aAA/C,wBACE,YAAK,SAAS,CAAC,qBAAf,uBACE,YACE,GAAG,CAAC,mDADN,CAEE,GAAG,CAAC,EAFN,EADF,EADF,cAOE,UAAG,SAAS,CAAC,0BAAb,qCAPF,GA5BF,GAbF,GAjDJ,EAZF,GADF,cAyHE,aACE,KAAK,CAAE,CACL9B,KAAK,CAAE,MADF,CAEL6C,OAAO,CAAE,MAFJ,CAGLK,QAAQ,CAAE,MAHL,CAILE,UAAU,CAAE,KAJP,CAKLC,WAAW,CAAE,KALR,CAMLP,UAAU,CAAE,QANP,CAOLQ,KAAK,CAAEjD,aAAa,CAAG,MAAH,CAAY,YAP3B,CAQLkD,OAAO,CAAE,SARJ,CASLC,aAAa,CAAE,OATV,CAULR,aAAa,CAAE,WAVV,CAWLS,UAAU,CAAEpD,aAAa,CAAG,iBAAH,CAAuB,mBAX3C,CAYLqD,MAAM,CAAE,0BAZH,CAaLX,cAAc,CAAE,eAbX,CAcLY,SAAS,CAAE,iCAdN,CADT,wBAkBE,WAAG,KAAK,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAV,wDAEG,CAAC,CAACvD,aAAF,eAAmB,KAAC,kBAAD,IAFtB,cAlBF,CAuBGL,KAAK,CAAG,GAAR,eACC,YAAI,SAAS,CAAC,YAAd,wBACE,YAAI,OAAO,CAAEH,OAAb,wBAEGf,SAAS,cACR,UAAG,SAAS,CAAC,wBAAb,EADQ,cAGR,UAAG,SAAS,CAAC,cAAb,EALJ,GADF,cASE,WAAI,OAAO,CAAEQ,MAAb,sBATF,GAxBJ,GAzHF,GADF,CAiKD,CAvUD,CAyUA,cAAeT,CAAAA,gBAAf","sourcesContent":["import algosdk from \"algosdk\";\nimport { ASSET_ID } from \"../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport MyAlgoConnect from \"@randlabs/myalgo-connect\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport GetCommittedAmount from \"../GetCommittedAmount\";\n\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\n\nconst TopNavigationBar = ({ darkTheme }) => {\n  const dispatch = useDispatch();\n\n  const addressNum = useSelector((state) => state.status.addressNum);\n  const isWalletConnected =\n    localStorage.getItem(\"wallet-type\") === null ? false : true;\n\n  const LogOut = () => {\n    localStorage.removeItem(\"address\");\n    localStorage.removeItem(\"addresses\");\n    localStorage.removeItem(\"wallet-type\");\n    localStorage.removeItem(\"walletconnect\");\n    window.location.reload();\n    console.log(\"data\");\n  };\n\n  const setMode = () => {\n    if (!darkTheme) {\n      localStorage.setItem(\"mode\", \"dark\");\n      dispatch({ type: \"dark_mode\" });\n    } else {\n      localStorage.setItem(\"mode\", \"light\");\n      dispatch({ type: \"light_mode\" });\n    }\n  };\n\n  const [width] = useWindowSize();\n  const [balance, setBalance] = useState([]);\n\n  const algodClient = new algosdk.Algodv2(\n    {\n      \"X-API-Key\": \"Xy8NsXxfJg2cQ2YQ4pax6aLrTcj55jZ9mbsNCM30 \",\n    },\n    \"https://testnet-algorand.api.purestake.io/ps2\",\n    \"\"\n  );\n\n  const walletAddress = localStorage.getItem(\"address\");\n  const addresses = localStorage.getItem(\"addresses\")?.split(\",\");\n\n  let addrArr = [];\n\n  useEffect(() => {\n    addresses?.forEach(async (item) => {\n      const myAccountInfo = await algodClient.accountInformation(item).do();\n      const bal =\n        myAccountInfo.assets.find((element) => element[\"asset-id\"] === ASSET_ID)\n          ?.amount / 100;\n\n      addrArr.push({ balance: !!bal ? bal : 0, address: item });\n\n      if (addrArr?.length === addresses?.length) {\n        console.log(addrArr);\n        dispatch({\n          type: \"setAlgoAddress\",\n          addressIndex: 0,\n          addr: addrArr[0]?.address,\n        });\n        setBalance(addrArr);\n      }\n    });\n  }, []);\n\n  const myAlgoConnect = async () => {\n    const myAlgoWallet = new MyAlgoConnect();\n\n    try {\n      const accounts = await myAlgoWallet.connect({\n        shouldSelectOneAccount: true,\n      });\n\n      const addresses = accounts.map((item) => item?.address);\n      const address = accounts[0].address;\n\n      // close modal.\n      localStorage.setItem(\"wallet-type\", \"my-algo\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectWallet = () => {\n    const connector = new WalletConnect({\n      bridge: \"https://bridge.walletconnect.org\",\n      qrcodeModal: QRCodeModal,\n    });\n\n    if (!connector.connected) {\n      connector.createSession();\n    }\n\n    connector.on(\"connect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      const { accounts } = payload.params[0];\n\n      const addresses = accounts.map((item) => item);\n      const address = accounts[0];\n\n      localStorage.setItem(\"wallet-type\", \"walletconnect\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    });\n\n    connector.on(\"session_update\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      const { accounts } = payload.params[0];\n\n      const addresses = accounts.map((item) => item);\n      const address = accounts[0];\n\n      localStorage.setItem(\"wallet-type\", \"walletconnect\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    });\n\n    connector.on(\"disconnect\", (error, payload) => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  };\n\n  const algoSignerConnect = async () => {\n    try {\n      if (typeof window.AlgoSigner === \"undefined\") {\n        window.open(\n          \"https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm\",\n          \"_blank\"\n        );\n      } else {\n        await window.AlgoSigner.connect({\n          ledger: \"TestNet\",\n        });\n        const accounts = await window.AlgoSigner.accounts({\n          ledger: \"TestNet\",\n        });\n\n        const addresses = accounts.map((item) => item?.address);\n        const address = accounts[0].address;\n\n        // close modal.\n        localStorage.setItem(\"wallet-type\", \"algosigner\");\n        localStorage.setItem(\"address\", address);\n        localStorage.setItem(\"addresses\", addresses);\n\n        window.location.reload();\n      }\n    } catch (error) {\n      alert(\"AlgoSigner not set up yet!\");\n    }\n  };\n\n  return (\n    <header className=\"small_header\">\n      <div className=\"small_header_inn\">\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textTransform: \"uppercase\",\n          }}\n        >\n          <strong>Choice Coin</strong>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {!!isWalletConnected ? (\n            <>\n              <div className=\"addrDisplay\">\n                <div className=\"addrDispMain\">\n                  <div className=\"addrDisplayInn\">\n                    <div className=\"addrBalance\">\n                      {balance[addressNum]?.balance} Choice\n                    </div>\n\n                    <CopyToClipboard text={balance[addressNum]?.address}>\n                      <div className=\"addressTxt\">\n                        <p>{balance[addressNum]?.address}</p>\n                        <i className=\"uil uil-copy\"></i>\n                      </div>\n                    </CopyToClipboard>\n                  </div>\n                </div>\n\n                <div className=\"dropDownConnect_items\">\n                  {balance?.map((item, index) => {\n                    return (\n                      <div\n                        key={index}\n                        className=\"dropDownConnect_item\"\n                        onClick={() => {\n                          dispatch({\n                            type: \"setAlgoAddress\",\n                            addressIndex: index,\n                            addr: item.address,\n                          });\n                        }}\n                      >\n                        <p className=\"dropDownConnect_item_txt\">\n                          {item.address}\n                        </p>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"dropDownConnect\">\n              <div className=\"dropDownConnect_button\">\n                <button className=\"connect_wallet_button\">\n                  <p>\n                    Connect Wallet\n                    <i\n                      className=\"uil uil-angle-down\"\n                      style={{ fontSize: \"18px\" }}\n                    />\n                  </p>\n                </button>\n              </div>\n\n              <div className=\"dropDownConnect_items\">\n                <div className=\"dropDownConnect_item\" onClick={myAlgoConnect}>\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/76r9kXSr/My-Algo-Logo-4c21daa4.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">Algo-Wallet</p>\n                </div>\n\n                <div\n                  className=\"dropDownConnect_item\"\n                  onClick={algoSignerConnect}\n                >\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/L4JB4JwT/Algo-Signer-2ec35000.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">\n                    {typeof window.AlgoSigner === undefined\n                      ? \"Install AlgoSigner\"\n                      : \"AlgoSigner\"}\n                  </p>\n                </div>\n\n                <div className=\"dropDownConnect_item\" onClick={connectWallet}>\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/J7JZ4cFb/icon-37675b59-1.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">\n                    Algorand Wallet(MOBILE)\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        {/*  */}\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          fontSize: \"13px\",\n          fontWeight: \"500\",\n          wordSpacing: \"1px\",\n          alignItems: \"center\",\n          color: walletAddress ? \"#fff\" : \"var(--wht)\",\n          padding: \"0px 5vw\",\n          letterSpacing: \"0.5px\",\n          textTransform: \"uppercase\",\n          background: walletAddress ? \"var(--main-col)\" : \"var(--background)\",\n          height: \"var(--sm-hd-height-half)\",\n          justifyContent: \"space-between\",\n          borderTop: \"1px solid var(--border-default)\",\n        }}\n      >\n        <p style={{ opacity: \"0.9\" }}>\n          Amount of Choice Coin used for voting:&nbsp;\n          {!!walletAddress && <GetCommittedAmount />} $Choice\n        </p>\n\n        {width > 850 && (\n          <ul className=\"listNavBig\">\n            <li onClick={setMode}>\n              LIGHT/DARK \n              {darkTheme ? (\n                <i className=\"uil uil-brightness-low\"></i>\n              ) : (\n                <i className=\"uil uil-moon\"></i>\n              )}\n            </li>\n            <li onClick={LogOut}>Sign Out</li>\n          </ul>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default TopNavigationBar;\n"]},"metadata":{},"sourceType":"module"}