{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EUGENE\\\\ChoiceDev\\\\Choice-Coin\\\\src\\\\statics\\\\TopNavigationBar.js\",\n    _s = $RefreshSig$();\n\nimport algosdk from \"algosdk\";\nimport { ASSET_ID } from \"../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport MyAlgoConnect from \"@randlabs/myalgo-connect\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport GetCommittedAmount from \"../GetCommittedAmount\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TopNavigationBar = ({\n  darkTheme\n}) => {\n  _s();\n\n  var _localStorage$getItem, _balance$addressNum, _balance$addressNum2, _balance$addressNum3;\n\n  const dispatch = useDispatch();\n  const addressNum = useSelector(state => state.status.addressNum);\n  const isWalletConnected = localStorage.getItem(\"wallet-type\") === null ? false : true;\n\n  const LogOut = () => {\n    localStorage.removeItem(\"address\");\n    localStorage.removeItem(\"addresses\");\n    localStorage.removeItem(\"wallet-type\");\n    localStorage.removeItem(\"walletconnect\");\n    window.location.reload();\n    console.log(\"data\");\n  };\n\n  const setMode = () => {\n    if (!darkTheme) {\n      localStorage.setItem(\"mode\", \"dark\");\n      dispatch({\n        type: \"dark_mode\"\n      });\n    } else {\n      localStorage.setItem(\"mode\", \"light\");\n      dispatch({\n        type: \"light_mode\"\n      });\n    }\n  };\n\n  const [width] = useWindowSize();\n  const [balance, setBalance] = useState([]);\n  const algodClient = new algosdk.Algodv2({\n    \"X-API-Key\": \"Xy8NsXxfJg2cQ2YQ4pax6aLrTcj55jZ9mbsNCM30 \"\n  }, \"https://testnet-algorand.api.purestake.io/ps2\", \"\");\n  const walletAddress = localStorage.getItem(\"address\");\n  const addresses = (_localStorage$getItem = localStorage.getItem(\"addresses\")) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.split(\",\");\n  let addrArr = [];\n  useEffect(() => {\n    addresses === null || addresses === void 0 ? void 0 : addresses.forEach(async item => {\n      var _myAccountInfo$assets;\n\n      const myAccountInfo = await algodClient.accountInformation(item).do();\n      const bal = ((_myAccountInfo$assets = myAccountInfo.assets.find(element => element[\"asset-id\"] === ASSET_ID)) === null || _myAccountInfo$assets === void 0 ? void 0 : _myAccountInfo$assets.amount) / 100;\n      addrArr.push({\n        balance: !!bal ? bal : 0,\n        address: item\n      });\n\n      if ((addrArr === null || addrArr === void 0 ? void 0 : addrArr.length) === (addresses === null || addresses === void 0 ? void 0 : addresses.length)) {\n        var _addrArr$;\n\n        console.log(addrArr);\n        dispatch({\n          type: \"setAlgoAddress\",\n          addressIndex: 0,\n          addr: (_addrArr$ = addrArr[0]) === null || _addrArr$ === void 0 ? void 0 : _addrArr$.address\n        });\n        setBalance(addrArr);\n      }\n    });\n  }, []);\n\n  const myAlgoConnect = async () => {\n    const myAlgoWallet = new MyAlgoConnect();\n\n    try {\n      const accounts = await myAlgoWallet.connect({\n        shouldSelectOneAccount: true\n      });\n      const addresses = accounts.map(item => item === null || item === void 0 ? void 0 : item.address);\n      const address = accounts[0].address; // close modal.\n\n      localStorage.setItem(\"wallet-type\", \"my-algo\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectWallet = () => {\n    const connector = new WalletConnect({\n      bridge: \"https://bridge.walletconnect.org\",\n      qrcodeModal: QRCodeModal\n    });\n\n    if (!connector.connected) {\n      connector.createSession();\n    }\n\n    connector.on(\"connect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      const {\n        accounts\n      } = payload.params[0];\n      const addresses = accounts.map(item => item);\n      const address = accounts[0];\n      localStorage.setItem(\"wallet-type\", \"walletconnect\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n      window.location.reload();\n    });\n    connector.on(\"session_update\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      const {\n        accounts\n      } = payload.params[0];\n      const addresses = accounts.map(item => item);\n      const address = accounts[0];\n      localStorage.setItem(\"wallet-type\", \"walletconnect\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n      window.location.reload();\n    });\n    connector.on(\"disconnect\", (error, payload) => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  };\n\n  const algoSignerConnect = async () => {\n    try {\n      if (typeof window.AlgoSigner === \"undefined\") {\n        window.open(\"https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm\", \"_blank\");\n      } else {\n        await window.AlgoSigner.connect({\n          ledger: \"TestNet\"\n        });\n        const accounts = await window.AlgoSigner.accounts({\n          ledger: \"TestNet\"\n        });\n        const addresses = accounts.map(item => item === null || item === void 0 ? void 0 : item.address);\n        const address = accounts[0].address; // close modal.\n\n        localStorage.setItem(\"wallet-type\", \"algosigner\");\n        localStorage.setItem(\"address\", address);\n        localStorage.setItem(\"addresses\", addresses);\n        window.location.reload();\n      }\n    } catch (error) {\n      alert(\"AlgoSigner not set up yet!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"small_header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"small_header_inn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          textTransform: \"uppercase\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Choice Coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: !!isWalletConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addrDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addrDispMain\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addrDisplayInn\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"addrBalance\",\n                  children: [(_balance$addressNum = balance[addressNum]) === null || _balance$addressNum === void 0 ? void 0 : _balance$addressNum.balance, \" Choice\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                  text: (_balance$addressNum2 = balance[addressNum]) === null || _balance$addressNum2 === void 0 ? void 0 : _balance$addressNum2.address,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"addressTxt\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_balance$addressNum3 = balance[addressNum]) === null || _balance$addressNum3 === void 0 ? void 0 : _balance$addressNum3.address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"uil uil-copy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropDownConnect_items\",\n              children: balance === null || balance === void 0 ? void 0 : balance.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropDownConnect_item\",\n                  onClick: () => {\n                    dispatch({\n                      type: \"setAlgoAddress\",\n                      addressIndex: index,\n                      addr: item.address\n                    });\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"dropDownConnect_item_txt\",\n                    children: item.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropDownConnect\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropDownConnect_button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"connect_wallet_button\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Connect Wallet\", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"uil uil-angle-down\",\n                  style: {\n                    fontSize: \"18px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropDownConnect_items\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropDownConnect_item\",\n              onClick: myAlgoConnect,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropDownConnect_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://i.postimg.cc/76r9kXSr/My-Algo-Logo-4c21daa4.png\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dropDownConnect_item_txt\",\n                children: \"Algo-Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropDownConnect_item\",\n              onClick: algoSignerConnect,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropDownConnect_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://i.postimg.cc/L4JB4JwT/Algo-Signer-2ec35000.png\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dropDownConnect_item_txt\",\n                children: typeof window.AlgoSigner === undefined ? \"Install AlgoSigner\" : \"AlgoSigner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropDownConnect_item\",\n              onClick: connectWallet,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropDownConnect_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://i.postimg.cc/J7JZ4cFb/icon-37675b59-1.png\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dropDownConnect_item_txt\",\n                children: \"Algorand Wallet(MOBILE)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        fontSize: \"13px\",\n        fontWeight: \"500\",\n        wordSpacing: \"1px\",\n        alignItems: \"center\",\n        color: walletAddress ? \"#fff\" : \"var(--wht)\",\n        padding: \"0px 5vw\",\n        letterSpacing: \"0.5px\",\n        textTransform: \"uppercase\",\n        background: walletAddress ? \"var(--main-col)\" : \"var(--background)\",\n        height: \"var(--sm-hd-height-half)\",\n        justifyContent: \"space-between\",\n        borderTop: \"1px solid var(--border-default)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          opacity: \"0.9\"\n        },\n        children: [\"Amount of Choice Coin used for voting:\\xA0\", !!walletAddress && /*#__PURE__*/_jsxDEV(GetCommittedAmount, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 31\n        }, this), \" $Choice\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), width > 850 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"listNavBig\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: setMode,\n          children: [\"LIGHT/DARK\", darkTheme ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"uil uil-brightness-low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"uil uil-moon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: LogOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopNavigationBar, \"kUNg+YOfCccrvKzPdbvIrGqflHc=\", false, function () {\n  return [useDispatch, useSelector, useWindowSize];\n});\n\n_c = TopNavigationBar;\nexport default TopNavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopNavigationBar\");","map":{"version":3,"sources":["C:/Users/EUGENE/ChoiceDev/Choice-Coin/src/statics/TopNavigationBar.js"],"names":["algosdk","ASSET_ID","useDispatch","useSelector","useEffect","useState","MyAlgoConnect","useWindowSize","CopyToClipboard","GetCommittedAmount","WalletConnect","QRCodeModal","TopNavigationBar","darkTheme","dispatch","addressNum","state","status","isWalletConnected","localStorage","getItem","LogOut","removeItem","window","location","reload","console","log","setMode","setItem","type","width","balance","setBalance","algodClient","Algodv2","walletAddress","addresses","split","addrArr","forEach","item","myAccountInfo","accountInformation","do","bal","assets","find","element","amount","push","address","length","addressIndex","addr","myAlgoConnect","myAlgoWallet","accounts","connect","shouldSelectOneAccount","map","error","connectWallet","connector","bridge","qrcodeModal","connected","createSession","on","payload","params","algoSignerConnect","AlgoSigner","open","ledger","alert","display","alignItems","justifyContent","textTransform","index","fontSize","undefined","fontWeight","wordSpacing","color","padding","letterSpacing","background","height","borderTop","opacity"],"mappings":"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","sourcesContent":["import algosdk from \"algosdk\";\nimport { ASSET_ID } from \"../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport MyAlgoConnect from \"@randlabs/myalgo-connect\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport GetCommittedAmount from \"../GetCommittedAmount\";\n\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\n\nconst TopNavigationBar = ({ darkTheme }) => {\n  const dispatch = useDispatch();\n\n  const addressNum = useSelector((state) => state.status.addressNum);\n  const isWalletConnected =\n    localStorage.getItem(\"wallet-type\") === null ? false : true;\n\n  const LogOut = () => {\n    localStorage.removeItem(\"address\");\n    localStorage.removeItem(\"addresses\");\n    localStorage.removeItem(\"wallet-type\");\n    localStorage.removeItem(\"walletconnect\");\n    window.location.reload();\n    console.log(\"data\");\n  };\n\n  const setMode = () => {\n    if (!darkTheme) {\n      localStorage.setItem(\"mode\", \"dark\");\n      dispatch({ type: \"dark_mode\" });\n    } else {\n      localStorage.setItem(\"mode\", \"light\");\n      dispatch({ type: \"light_mode\" });\n    }\n  };\n\n  const [width] = useWindowSize();\n  const [balance, setBalance] = useState([]);\n\n  const algodClient = new algosdk.Algodv2(\n    {\n      \"X-API-Key\": \"Xy8NsXxfJg2cQ2YQ4pax6aLrTcj55jZ9mbsNCM30 \",\n    },\n    \"https://testnet-algorand.api.purestake.io/ps2\",\n    \"\"\n  );\n\n  const walletAddress = localStorage.getItem(\"address\");\n  const addresses = localStorage.getItem(\"addresses\")?.split(\",\");\n\n  let addrArr = [];\n\n  useEffect(() => {\n    addresses?.forEach(async (item) => {\n      const myAccountInfo = await algodClient.accountInformation(item).do();\n      const bal =\n        myAccountInfo.assets.find((element) => element[\"asset-id\"] === ASSET_ID)\n          ?.amount / 100;\n\n      addrArr.push({ balance: !!bal ? bal : 0, address: item });\n\n      if (addrArr?.length === addresses?.length) {\n        console.log(addrArr);\n        dispatch({\n          type: \"setAlgoAddress\",\n          addressIndex: 0,\n          addr: addrArr[0]?.address,\n        });\n        setBalance(addrArr);\n      }\n    });\n  }, []);\n\n  const myAlgoConnect = async () => {\n    const myAlgoWallet = new MyAlgoConnect();\n\n    try {\n      const accounts = await myAlgoWallet.connect({\n        shouldSelectOneAccount: true,\n      });\n\n      const addresses = accounts.map((item) => item?.address);\n      const address = accounts[0].address;\n\n      // close modal.\n      localStorage.setItem(\"wallet-type\", \"my-algo\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectWallet = () => {\n    const connector = new WalletConnect({\n      bridge: \"https://bridge.walletconnect.org\",\n      qrcodeModal: QRCodeModal,\n    });\n\n    if (!connector.connected) {\n      connector.createSession();\n    }\n\n    connector.on(\"connect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      const { accounts } = payload.params[0];\n\n      const addresses = accounts.map((item) => item);\n      const address = accounts[0];\n\n      localStorage.setItem(\"wallet-type\", \"walletconnect\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    });\n\n    connector.on(\"session_update\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      const { accounts } = payload.params[0];\n\n      const addresses = accounts.map((item) => item);\n      const address = accounts[0];\n\n      localStorage.setItem(\"wallet-type\", \"walletconnect\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    });\n\n    connector.on(\"disconnect\", (error, payload) => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  };\n\n  const algoSignerConnect = async () => {\n    try {\n      if (typeof window.AlgoSigner === \"undefined\") {\n        window.open(\n          \"https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm\",\n          \"_blank\"\n        );\n      } else {\n        await window.AlgoSigner.connect({\n          ledger: \"TestNet\",\n        });\n        const accounts = await window.AlgoSigner.accounts({\n          ledger: \"TestNet\",\n        });\n\n        const addresses = accounts.map((item) => item?.address);\n        const address = accounts[0].address;\n\n        // close modal.\n        localStorage.setItem(\"wallet-type\", \"algosigner\");\n        localStorage.setItem(\"address\", address);\n        localStorage.setItem(\"addresses\", addresses);\n\n        window.location.reload();\n      }\n    } catch (error) {\n      alert(\"AlgoSigner not set up yet!\");\n    }\n  };\n\n  return (\n    <header className=\"small_header\">\n      <div className=\"small_header_inn\">\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textTransform: \"uppercase\",\n          }}\n        >\n          <strong>Choice Coin</strong>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {!!isWalletConnected ? (\n            <>\n              <div className=\"addrDisplay\">\n                <div className=\"addrDispMain\">\n                  <div className=\"addrDisplayInn\">\n                    <div className=\"addrBalance\">\n                      {balance[addressNum]?.balance} Choice\n                    </div>\n\n                    <CopyToClipboard text={balance[addressNum]?.address}>\n                      <div className=\"addressTxt\">\n                        <p>{balance[addressNum]?.address}</p>\n                        <i className=\"uil uil-copy\"></i>\n                      </div>\n                    </CopyToClipboard>\n                  </div>\n                </div>\n\n                <div className=\"dropDownConnect_items\">\n                  {balance?.map((item, index) => {\n                    return (\n                      <div\n                        key={index}\n                        className=\"dropDownConnect_item\"\n                        onClick={() => {\n                          dispatch({\n                            type: \"setAlgoAddress\",\n                            addressIndex: index,\n                            addr: item.address,\n                          });\n                        }}\n                      >\n                        <p className=\"dropDownConnect_item_txt\">\n                          {item.address}\n                        </p>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"dropDownConnect\">\n              <div className=\"dropDownConnect_button\">\n                <button className=\"connect_wallet_button\">\n                  <p>\n                    Connect Wallet\n                    <i\n                      className=\"uil uil-angle-down\"\n                      style={{ fontSize: \"18px\" }}\n                    />\n                  </p>\n                </button>\n              </div>\n\n              <div className=\"dropDownConnect_items\">\n                <div className=\"dropDownConnect_item\" onClick={myAlgoConnect}>\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/76r9kXSr/My-Algo-Logo-4c21daa4.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">Algo-Wallet</p>\n                </div>\n\n                <div\n                  className=\"dropDownConnect_item\"\n                  onClick={algoSignerConnect}\n                >\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/L4JB4JwT/Algo-Signer-2ec35000.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">\n                    {typeof window.AlgoSigner === undefined\n                      ? \"Install AlgoSigner\"\n                      : \"AlgoSigner\"}\n                  </p>\n                </div>\n\n                <div className=\"dropDownConnect_item\" onClick={connectWallet}>\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/J7JZ4cFb/icon-37675b59-1.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">\n                    Algorand Wallet(MOBILE)\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        {/*  */}\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          fontSize: \"13px\",\n          fontWeight: \"500\",\n          wordSpacing: \"1px\",\n          alignItems: \"center\",\n          color: walletAddress ? \"#fff\" : \"var(--wht)\",\n          padding: \"0px 5vw\",\n          letterSpacing: \"0.5px\",\n          textTransform: \"uppercase\",\n          background: walletAddress ? \"var(--main-col)\" : \"var(--background)\",\n          height: \"var(--sm-hd-height-half)\",\n          justifyContent: \"space-between\",\n          borderTop: \"1px solid var(--border-default)\",\n        }}\n      >\n        <p style={{ opacity: \"0.9\" }}>\n          Amount of Choice Coin used for voting:&nbsp;\n          {!!walletAddress && <GetCommittedAmount />} $Choice\n        </p>\n\n        {width > 850 && (\n          <ul className=\"listNavBig\">\n            <li onClick={setMode}>\n              LIGHT/DARK \n              {darkTheme ? (\n                <i className=\"uil uil-brightness-low\"></i>\n              ) : (\n                <i className=\"uil uil-moon\"></i>\n              )}\n            </li>\n            <li onClick={LogOut}>Sign Out</li>\n          </ul>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default TopNavigationBar;\n"]},"metadata":{},"sourceType":"module"}