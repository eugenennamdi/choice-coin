{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/EUGENE/ChoiceDev/Choice-Coin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/EUGENE/ChoiceDev/Choice-Coin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _ from\"lodash\";import $ from\"jquery\";import\"./styles/electionlist.css\";import{useDispatch,useSelector}from\"react-redux\";import algosdk from\"algosdk\";import{ASSET_ID}from\"./constants\";import MyAlgoConnect from\"@randlabs/myalgo-connect\";import{formatJsonRpcRequest}from\"@json-rpc-tools/utils\";import WalletConnect from\"@walletconnect/client\";import QRCodeModal from\"algorand-walletconnect-qrcode-modal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ElectionList=function ElectionList(){var _localStorage$getItem;var dispatch=useDispatch();var addressNum=useSelector(function(state){return state.status.addressNum;});var algodClient=new algosdk.Algodv2({\"X-API-Key\":\"Xy8NsXxfJg2cQ2YQ4pax6aLrTcj55jZ9mbsNCM30 \"},\"https://testnet-algorand.api.purestake.io/ps2\",\"\");var walletAddress=localStorage.getItem(\"address\");var walletType=localStorage.getItem(\"wallet-type\");var addresses=(_localStorage$getItem=localStorage.getItem(\"addresses\"))===null||_localStorage$getItem===void 0?void 0:_localStorage$getItem.split(\",\");var isThereAddress=localStorage.getItem(\"address\");var data=[{candidates:[{address:\"DQ2NPLGQ3CV3QAPMS7KHIRUNUF2ZSTYRT5SZGDCPLB7VPC5OSSLCI5H7DM\",image:\"\",name:\"Yes\"},{address:\"6P6D5KQH5VIXEJGW6LXPUMEZ77XNLHQXB6GMW4CBDBN2VJ4CFZ7HCIKUBM\",image:\"\",name:\"No\"}],choice_per_vote:1,created_at:\"2021-12-08T10:32:15.878473\",description:\"Lorem ipsum\",is_finished:false,is_started:true,process_image:\"https://i.postimg.cc/90XSyrjH/choice.png\",slug:\"CHOICE-COIN-IS-A-STANDARD-ALGORAND-ASSET-b0c7db\",title:\"CHOICE COIN IS A STANDARD ALGORAND ASSET\",wallet:{address:\"NX4T2FTIGNPVPSMEXJFMMKD46O4HRCPN25BDHOUW2SWXANZPQBZEDYKDVE\"}}];var myAlgoConnect=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(voteData){var myAlgoWallet,accounts,address,myAccountInfo,balance,containsChoice,suggestedParams,amountToSend,txn,signedTxn;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:myAlgoWallet=new MyAlgoConnect();_context.prev=1;_context.next=4;return myAlgoWallet.connect({shouldSelectOneAccount:true});case 4:accounts=_context.sent;address=!!isThereAddress?isThereAddress:accounts[0].address;_context.next=8;return algodClient.accountInformation(!!isThereAddress?isThereAddress:accounts[0].address).do();case 8:myAccountInfo=_context.sent;// get balance of the voter\nbalance=myAccountInfo.assets?myAccountInfo.assets.find(function(element){return element[\"asset-id\"]===ASSET_ID;}).amount/100:0;// check if the voter address has Choice\ncontainsChoice=myAccountInfo.assets?myAccountInfo.assets.some(function(element){return element[\"asset-id\"]===ASSET_ID;}):false;// if the address has no ASAs\nif(!(myAccountInfo.assets.length===0)){_context.next=15;break;}alert(\"You need to optin to Choice Coin\");dispatch({type:\"close_vote_modal\"});return _context.abrupt(\"return\");case 15:if(containsChoice){_context.next=19;break;}alert(\"You need to optin to Choice Coin\");dispatch({type:\"close_vote_modal\"});return _context.abrupt(\"return\");case 19:if(!(voteData.amount>balance)){_context.next=22;break;}alert(\"You do not have sufficient balance to make this transaction.\");return _context.abrupt(\"return\");case 22:_context.next=24;return algodClient.getTransactionParams().do();case 24:suggestedParams=_context.sent;amountToSend=voteData.amount*100;txn=algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({from:address,to:voteData.address,amount:amountToSend,assetIndex:ASSET_ID,suggestedParams:suggestedParams});_context.next=29;return myAlgoWallet.signTransaction(txn.toByte());case 29:signedTxn=_context.sent;_context.next=32;return algodClient.sendRawTransaction(signedTxn.blob).do();case 32:// close modal.\ndispatch({type:\"close_vote_modal\"});// alert success\nalert(\"You have successfully placed your vote for this election\");window.location.reload();_context.next=41;break;case 37:_context.prev=37;_context.t0=_context[\"catch\"](1);alert(\"An error occured the during transaction process\");console.log(_context.t0);case 41:case\"end\":return _context.stop();}}},_callee,null,[[1,37]]);}));return function myAlgoConnect(_x){return _ref.apply(this,arguments);};}();var algoSignerConnect=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(voteData){var accounts,address,myAccountInfo,balance,containsChoice,suggestedParams,amountToSend,txn,signedTxn;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!(typeof window.AlgoSigner===\"undefined\")){_context2.next=5;break;}window.open(\"https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm\",\"_blank\");_context2.next=40;break;case 5:_context2.next=7;return window.AlgoSigner.connect({ledger:\"TestNet\"});case 7:_context2.next=9;return window.AlgoSigner.accounts({ledger:\"TestNet\"});case 9:accounts=_context2.sent;address=!!isThereAddress?isThereAddress:accounts[0].address;_context2.next=13;return algodClient.accountInformation(!!isThereAddress?isThereAddress:accounts[0].address).do();case 13:myAccountInfo=_context2.sent;// get balance of the voter\nbalance=myAccountInfo.assets?myAccountInfo.assets.find(function(element){return element[\"asset-id\"]===ASSET_ID;}).amount/100:0;// check if the voter address has Choice\ncontainsChoice=myAccountInfo.assets?myAccountInfo.assets.some(function(element){return element[\"asset-id\"]===ASSET_ID;}):false;// if the address has no ASAs\nif(!(myAccountInfo.assets.length===0)){_context2.next=20;break;}alert(\"You need to optin to Choice Coin\");dispatch({type:\"close_vote_modal\"});return _context2.abrupt(\"return\");case 20:if(containsChoice){_context2.next=24;break;}alert(\"You need to optin to Choice Coin\");dispatch({type:\"close_vote_modal\"});return _context2.abrupt(\"return\");case 24:if(!(voteData.amount>balance)){_context2.next=27;break;}alert(\"You do not have sufficient balance to make this transaction.\");return _context2.abrupt(\"return\");case 27:_context2.next=29;return algodClient.getTransactionParams().do();case 29:suggestedParams=_context2.sent;amountToSend=voteData.amount*100;txn=algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({from:address,to:voteData.address,amount:amountToSend,assetIndex:ASSET_ID,suggestedParams:suggestedParams});_context2.next=34;return window.AlgoSigner.signTxn([{txn:window.AlgoSigner.encoding.msgpackToBase64(txn.toByte())}]);case 34:signedTxn=_context2.sent;_context2.next=37;return algodClient.sendRawTransaction(window.AlgoSigner.encoding.base64ToMsgpack(signedTxn[0].blob)).do();case 37:// close modal.\ndispatch({type:\"close_vote_modal\"});// alert success\nalert(\"You have successfully placed your vote for this election\");window.location.reload();case 40:_context2.next=46;break;case 42:_context2.prev=42;_context2.t0=_context2[\"catch\"](0);alert(\"An error occured the during transaction process\");console.log(_context2.t0);case 46:case\"end\":return _context2.stop();}}},_callee2,null,[[0,42]]);}));return function algoSignerConnect(_x2){return _ref2.apply(this,arguments);};}();var algoMobileConnect=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(voteData){var connector,address,myAccountInfo,balance,containsChoice,suggestedParams,amountToSend,txn,txnsToSign,requestParams,request,result,decodedResult;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:connector=new WalletConnect({bridge:\"https://bridge.walletconnect.org\",qrcodeModal:QRCodeModal});_context3.prev=1;address=!!isThereAddress?isThereAddress:\"\";_context3.next=5;return algodClient.accountInformation(address).do();case 5:myAccountInfo=_context3.sent;balance=myAccountInfo.assets?myAccountInfo.assets.find(function(element){return element[\"asset-id\"]===ASSET_ID;}).amount/100:0;containsChoice=myAccountInfo.assets?myAccountInfo.assets.some(function(element){return element[\"asset-id\"]===ASSET_ID;}):false;if(!(myAccountInfo.assets.length===0)){_context3.next=11;break;}alert(\"You need to optin to Choice Coin\");return _context3.abrupt(\"return\");case 11:if(containsChoice){_context3.next=14;break;}alert(\"You need to optin to Choice Coin\");return _context3.abrupt(\"return\");case 14:if(!(voteData.amount>balance)){_context3.next=17;break;}alert(\"You do not have sufficient balance to make this transaction.\");return _context3.abrupt(\"return\");case 17:_context3.next=19;return algodClient.getTransactionParams().do();case 19:suggestedParams=_context3.sent;amountToSend=voteData.amount*100;txn=algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({from:address,to:voteData.address,amount:amountToSend,assetIndex:ASSET_ID,suggestedParams:suggestedParams});txnsToSign=[{txn:Buffer.from(algosdk.encodeUnsignedTransaction(txn)).toString(\"base64\"),message:\"Transaction using Mobile Wallet\"}];requestParams=[txnsToSign];request=formatJsonRpcRequest(\"algo_signTxn\",requestParams);_context3.next=27;return connector.sendCustomRequest(request);case 27:result=_context3.sent;decodedResult=result.map(function(element){return element?new Uint8Array(Buffer.from(element,\"base64\")):null;});console.log(decodedResult);_context3.next=32;return algodClient.sendRawTransaction(decodedResult).do();case 32:alert(\"You have successfully placed your vote for this election\");window.location.reload();_context3.next=40;break;case 36:_context3.prev=36;_context3.t0=_context3[\"catch\"](1);alert(\"An error occured the during transaction process\");console.log(_context3.t0);case 40:case\"end\":return _context3.stop();}}},_callee3,null,[[1,36]]);}));return function algoMobileConnect(_x3){return _ref3.apply(this,arguments);};}();var placeVote=function placeVote(address,amount,election){if(!address){alert(\"Select an option to vote!!\");return;}if(walletType===\"my-algo\"){myAlgoConnect({address:address,amount:amount,election:election});}else if(walletType===\"algosigner\"){algoSignerConnect({address:address,amount:amount,election:election});}else if(walletType===\"walletconnect\"){algoMobileConnect({address:address,amount:amount,election:election});}};return/*#__PURE__*/_jsx(\"div\",{className:\"ptt_elt\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ptt_elt_inn\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ptt_hd\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"CHOICE-COIN VOTING PARTICIPATION\"})})}),/*#__PURE__*/_jsx(\"ul\",{className:\"card_list\",children:data===null||data===void 0?void 0:data.map(function(slug,index){var _slug$candidates;return/*#__PURE__*/_jsxs(\"div\",{className:\"card_cont\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card_r1\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"card_elt_img\",children:slug.process_image?/*#__PURE__*/_jsx(\"img\",{src:slug.process_image,alt:\"\"}):/*#__PURE__*/_jsx(\"i\",{className:\"uil uil-asterisk\",style:{paddingLeft:\"2px\",paddingBottom:\"2px\"}})}),/*#__PURE__*/_jsx(\"div\",{className:\"card_elt_tit\",children:slug.title})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card_elt_desc\",children:slug===null||slug===void 0?void 0:slug.card_desc}),/*#__PURE__*/_jsxs(\"div\",{className:\"card_cand\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card_cand_hd\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"amountToCommit\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Amount of Choice to commit:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",placeholder:\"1\",className:\"amtToCommitInp\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"vote_collap\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card_cand_hd\",children:\"Options\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"vote_now_list\",children:slug===null||slug===void 0?void 0:(_slug$candidates=slug.candidates)===null||_slug$candidates===void 0?void 0:_slug$candidates.map(function(item,index){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"options\",value:item.address}),/*#__PURE__*/_jsx(\"div\",{className:\"vote_img_cont\",children:!!item.image?/*#__PURE__*/_jsx(\"img\",{src:item.image,alt:\"\"}):/*#__PURE__*/_jsx(\"i\",{className:\"uil uil-asterisk\"})}),/*#__PURE__*/_jsx(\"p\",{children:item.name})]},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"rec_vote_cont\",children:/*#__PURE__*/_jsx(\"button\",{className:\"record_vote\",onClick:function onClick(e){var voteVal=$(e.target).closest(\".card_cand\").find(\".vote_now_list\");var amountToSend=$(e.target).closest(\".card_cand\").find(\".amtToCommitInp\").val();var amt=!!amountToSend?amountToSend:slug.choice_per_vote;placeVote($(\"input[name=options]:checked\",voteVal).val(),amt,slug);},children:\"Submit vote\"})})]})]})]},index);})})]})});};export default ElectionList;","map":{"version":3,"sources":["C:/Users/EUGENE/ChoiceDev/Choice-Coin/src/ElectionList.js"],"names":["_","$","useDispatch","useSelector","algosdk","ASSET_ID","MyAlgoConnect","formatJsonRpcRequest","WalletConnect","QRCodeModal","ElectionList","dispatch","addressNum","state","status","algodClient","Algodv2","walletAddress","localStorage","getItem","walletType","addresses","split","isThereAddress","data","candidates","address","image","name","choice_per_vote","created_at","description","is_finished","is_started","process_image","slug","title","wallet","myAlgoConnect","voteData","myAlgoWallet","connect","shouldSelectOneAccount","accounts","accountInformation","do","myAccountInfo","balance","assets","find","element","amount","containsChoice","some","length","alert","type","getTransactionParams","suggestedParams","amountToSend","txn","makeAssetTransferTxnWithSuggestedParamsFromObject","from","to","assetIndex","signTransaction","toByte","signedTxn","sendRawTransaction","blob","window","location","reload","console","log","algoSignerConnect","AlgoSigner","open","ledger","signTxn","encoding","msgpackToBase64","base64ToMsgpack","algoMobileConnect","connector","bridge","qrcodeModal","txnsToSign","Buffer","encodeUnsignedTransaction","toString","message","requestParams","request","sendCustomRequest","result","decodedResult","map","Uint8Array","placeVote","election","index","display","flexDirection","alignItems","paddingLeft","paddingBottom","card_desc","item","e","voteVal","target","closest","val","amt"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport $ from \"jquery\";\nimport \"./styles/electionlist.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport algosdk from \"algosdk\";\nimport { ASSET_ID } from \"./constants\";\nimport MyAlgoConnect from \"@randlabs/myalgo-connect\";\nimport { formatJsonRpcRequest } from \"@json-rpc-tools/utils\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\n\nconst ElectionList = () => {\n  const dispatch = useDispatch();\n\n  const addressNum = useSelector((state) => state.status.addressNum);\n\n  const algodClient = new algosdk.Algodv2(\n    {\n      \"X-API-Key\": \"Xy8NsXxfJg2cQ2YQ4pax6aLrTcj55jZ9mbsNCM30 \",\n    },\n    \"https://testnet-algorand.api.purestake.io/ps2\",\n    \"\"\n  );\n  const walletAddress = localStorage.getItem(\"address\");\n  const walletType = localStorage.getItem(\"wallet-type\");\n\n  const addresses = localStorage.getItem(\"addresses\")?.split(\",\");\n\n  const isThereAddress = localStorage.getItem(\"address\");\n\n  const data = [\n    {\n      candidates: [\n        {\n          address: \"DQ2NPLGQ3CV3QAPMS7KHIRUNUF2ZSTYRT5SZGDCPLB7VPC5OSSLCI5H7DM\",\n          image: \"\",\n          name: \"Yes\",\n        },\n\n        {\n          address: \"6P6D5KQH5VIXEJGW6LXPUMEZ77XNLHQXB6GMW4CBDBN2VJ4CFZ7HCIKUBM\",\n          image: \"\",\n          name: \"No\",\n        },\n      ],\n      choice_per_vote: 1,\n      created_at: \"2021-12-08T10:32:15.878473\",\n      description: \"Lorem ipsum\",\n      is_finished: false,\n      is_started: true,\n      process_image: \"https://i.postimg.cc/90XSyrjH/choice.png\",\n      slug: \"CHOICE-COIN-IS-A-STANDARD-ALGORAND-ASSET-b0c7db\",\n      title: \"CHOICE COIN IS A STANDARD ALGORAND ASSET\",\n      wallet: {\n        address: \"NX4T2FTIGNPVPSMEXJFMMKD46O4HRCPN25BDHOUW2SWXANZPQBZEDYKDVE\",\n      },\n    },\n  ];\n\n  const myAlgoConnect = async (voteData) => {\n    const myAlgoWallet = new MyAlgoConnect();\n\n    try {\n      const accounts = await myAlgoWallet.connect({\n        shouldSelectOneAccount: true,\n      });\n      const address = !!isThereAddress ? isThereAddress : accounts[0].address;\n\n      const myAccountInfo = await algodClient\n        .accountInformation(\n          !!isThereAddress ? isThereAddress : accounts[0].address\n        )\n        .do();\n\n      // get balance of the voter\n      const balance = myAccountInfo.assets\n        ? myAccountInfo.assets.find(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          ).amount / 100\n        : 0;\n\n      // check if the voter address has Choice\n      const containsChoice = myAccountInfo.assets\n        ? myAccountInfo.assets.some(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          )\n        : false;\n\n      // if the address has no ASAs\n      if (myAccountInfo.assets.length === 0) {\n        alert(\"You need to optin to Choice Coin\");\n        dispatch({ type: \"close_vote_modal\" });\n        return;\n      }\n\n      if (!containsChoice) {\n        alert(\"You need to optin to Choice Coin\");\n        dispatch({ type: \"close_vote_modal\" });\n        return;\n      }\n\n      if (voteData.amount > balance) {\n        alert(\"You do not have sufficient balance to make this transaction.\");\n        return;\n      }\n\n      const suggestedParams = await algodClient.getTransactionParams().do();\n      const amountToSend = voteData.amount * 100;\n\n      const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n        from: address,\n        to: voteData.address,\n        amount: amountToSend,\n        assetIndex: ASSET_ID,\n        suggestedParams,\n      });\n\n      const signedTxn = await myAlgoWallet.signTransaction(txn.toByte());\n      await algodClient.sendRawTransaction(signedTxn.blob).do();\n\n      // close modal.\n      dispatch({ type: \"close_vote_modal\" });\n\n      // alert success\n      alert(\"You have successfully placed your vote for this election\");\n      window.location.reload();\n    } catch (error) {\n      alert(\"An error occured the during transaction process\");\n      console.log(error);\n    }\n  };\n\n  const algoSignerConnect = async (voteData) => {\n    try {\n      if (typeof window.AlgoSigner === \"undefined\") {\n        window.open(\n          \"https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm\",\n          \"_blank\"\n        );\n      } else {\n        await window.AlgoSigner.connect({\n          ledger: \"TestNet\",\n        });\n        const accounts = await window.AlgoSigner.accounts({\n          ledger: \"TestNet\",\n        });\n\n        const address = !!isThereAddress ? isThereAddress : accounts[0].address;\n\n        const myAccountInfo = await algodClient\n          .accountInformation(\n            !!isThereAddress ? isThereAddress : accounts[0].address\n          )\n          .do();\n\n        // get balance of the voter\n        const balance = myAccountInfo.assets\n          ? myAccountInfo.assets.find(\n              (element) => element[\"asset-id\"] === ASSET_ID\n            ).amount / 100\n          : 0;\n\n        // check if the voter address has Choice\n        const containsChoice = myAccountInfo.assets\n          ? myAccountInfo.assets.some(\n              (element) => element[\"asset-id\"] === ASSET_ID\n            )\n          : false;\n\n        // if the address has no ASAs\n        if (myAccountInfo.assets.length === 0) {\n          alert(\"You need to optin to Choice Coin\");\n          dispatch({ type: \"close_vote_modal\" });\n          return;\n        }\n\n        if (!containsChoice) {\n          alert(\"You need to optin to Choice Coin\");\n          dispatch({ type: \"close_vote_modal\" });\n          return;\n        }\n\n        if (voteData.amount > balance) {\n          alert(\"You do not have sufficient balance to make this transaction.\");\n          return;\n        }\n\n        const suggestedParams = await algodClient.getTransactionParams().do();\n        const amountToSend = voteData.amount * 100;\n\n        const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n          from: address,\n          to: voteData.address,\n          amount: amountToSend,\n          assetIndex: ASSET_ID,\n          suggestedParams,\n        });\n\n        const signedTxn = await window.AlgoSigner.signTxn([\n          { txn: window.AlgoSigner.encoding.msgpackToBase64(txn.toByte()) },\n        ]);\n        await algodClient\n          .sendRawTransaction(\n            window.AlgoSigner.encoding.base64ToMsgpack(signedTxn[0].blob)\n          )\n          .do();\n\n        // close modal.\n        dispatch({ type: \"close_vote_modal\" });\n\n        // alert success\n        alert(\"You have successfully placed your vote for this election\");\n        window.location.reload();\n      }\n    } catch (error) {\n      alert(\"An error occured the during transaction process\");\n      console.log(error);\n    }\n  };\n\n  const algoMobileConnect = async (voteData) => {\n    const connector = new WalletConnect({\n      bridge: \"https://bridge.walletconnect.org\",\n      qrcodeModal: QRCodeModal,\n    });\n\n    try {\n      const address = !!isThereAddress ? isThereAddress : \"\";\n\n      const myAccountInfo = await algodClient.accountInformation(address).do();\n\n      const balance = myAccountInfo.assets\n        ? myAccountInfo.assets.find(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          ).amount / 100\n        : 0;\n\n      const containsChoice = myAccountInfo.assets\n        ? myAccountInfo.assets.some(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          )\n        : false;\n\n      if (myAccountInfo.assets.length === 0) {\n        alert(\"You need to optin to Choice Coin\");\n        return;\n      }\n\n      if (!containsChoice) {\n        alert(\"You need to optin to Choice Coin\");\n        return;\n      }\n\n      if (voteData.amount > balance) {\n        alert(\"You do not have sufficient balance to make this transaction.\");\n        return;\n      }\n\n      const suggestedParams = await algodClient.getTransactionParams().do();\n      const amountToSend = voteData.amount * 100;\n\n      const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n        from: address,\n        to: voteData.address,\n        amount: amountToSend,\n        assetIndex: ASSET_ID,\n        suggestedParams,\n      });\n\n      const txnsToSign = [\n        {\n          txn: Buffer.from(algosdk.encodeUnsignedTransaction(txn)).toString(\n            \"base64\"\n          ),\n          message: \"Transaction using Mobile Wallet\",\n        },\n      ];\n\n      const requestParams = [txnsToSign];\n\n      const request = formatJsonRpcRequest(\"algo_signTxn\", requestParams);\n      const result = await connector.sendCustomRequest(request);\n\n      const decodedResult = result.map((element) => {\n        return element ? new Uint8Array(Buffer.from(element, \"base64\")) : null;\n      });\n\n      console.log(decodedResult);\n\n      await algodClient.sendRawTransaction(decodedResult).do();\n\n      alert(\"You have successfully placed your vote for this election\");\n      window.location.reload();\n    } catch (error) {\n      alert(\"An error occured the during transaction process\");\n      console.log(error);\n    }\n  };\n\n  const placeVote = (address, amount, election) => {\n    if (!address) {\n      alert(\"Select an option to vote!!\");\n      return;\n    }\n\n    if (walletType === \"my-algo\") {\n      myAlgoConnect({ address, amount, election });\n    } else if (walletType === \"algosigner\") {\n      algoSignerConnect({ address, amount, election });\n    } else if (walletType === \"walletconnect\") {\n      algoMobileConnect({ address, amount, election });\n    }\n  };\n\n  return (\n    <div className=\"ptt_elt\">\n      <div className=\"ptt_elt_inn\">\n        <div className=\"ptt_hd\">\n          <p><strong>CHOICE-COIN VOTING PARTICIPATION</strong></p>\n        </div>\n        <ul className=\"card_list\">\n          {data?.map((slug, index) => {\n            return (\n              <div className=\"card_cont\" key={index}>\n                <div className=\"card_r1\">\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <div className=\"card_elt_img\">\n                      {slug.process_image ? (\n                        <img src={slug.process_image} alt=\"\" />\n                      ) : (\n                        <i\n                          className=\"uil uil-asterisk\"\n                          style={{ paddingLeft: \"2px\", paddingBottom: \"2px\" }}\n                        />\n                      )}\n                    </div>\n                    <div className=\"card_elt_tit\">{slug.title}</div>\n                  </div>\n\n                  {/* <div className=\"electionEndTime\">Ends on:</div> */}\n                </div>\n\n                <div className=\"card_elt_desc\">{slug?.card_desc}</div>\n\n                <div className=\"card_cand\">\n                  <div className=\"card_cand_hd\">\n                    <div className=\"amountToCommit\">\n                      <p>Amount of Choice to commit:</p>\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        placeholder=\"1\"\n                        className=\"amtToCommitInp\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"vote_collap\">\n                    <div className=\"card_cand_hd\">Options</div>\n                    <ul className=\"vote_now_list\">\n                      {slug?.candidates?.map((item, index) => {\n                        return (\n                          <li key={index}>\n                            <input\n                              type=\"radio\"\n                              name=\"options\"\n                              value={item.address}\n                            />\n\n                            <div className=\"vote_img_cont\">\n                              {!!item.image ? (\n                                <img src={item.image} alt=\"\" />\n                              ) : (\n                                <i className=\"uil uil-asterisk\"></i>\n                              )}\n                            </div>\n                            <p>{item.name}</p>\n                          </li>\n                        );\n                      })}\n                    </ul>\n\n                    <div className=\"rec_vote_cont\">\n                      <button\n                        className=\"record_vote\"\n                        onClick={(e) => {\n                          var voteVal = $(e.target)\n                            .closest(\".card_cand\")\n                            .find(\".vote_now_list\");\n\n                          var amountToSend = $(e.target)\n                            .closest(\".card_cand\")\n                            .find(\".amtToCommitInp\")\n                            .val();\n\n                          var amt = !!amountToSend\n                            ? amountToSend\n                            : slug.choice_per_vote;\n\n                          placeVote(\n                            $(\"input[name=options]:checked\", voteVal).val(),\n                            amt,\n                            slug\n                          );\n                        }}\n                      >\n                        Submit vote\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ElectionList;\n"]},"metadata":{},"sourceType":"module"}